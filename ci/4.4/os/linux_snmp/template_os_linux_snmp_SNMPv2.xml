<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
   <version>4.4</version>
   <date>2015-12-30T14:41:30Z</date>
   <groups>
      <group>
         <name>Templates/Modules</name>
      </group>
      <group>
         <name>Templates/Operating systems</name>
      </group>
   </groups>
   <templates>
      <template>
         <template>Template Module Linux block devices SNMPv2</template>
         <name>Template Module Linux block devices SNMPv2</name>
         <description>MIBs used:&#13;
UCD-DISKIO-MIB&#13;
&#13;
Template tooling version used: 0.32</description>
         <groups>
            <group>
               <name>Templates/Modules</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>Storage</name>
            </application>
         </applications>
         <discovery_rules>
            <discovery_rule>
               <name>Block devices discovery</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>discovery[{#DEVNAME},1.3.6.1.4.1.2021.13.15.1.1.2]</snmp_oid>
               <key>vfs.dev.discovery[snmp]</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#DEVNAME}</macro>
                        <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#DEVNAME}</macro>
                        <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>B</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>Block devices are discovered from UCD-DISKIO-MIB::diskIOTable (http://net-snmp.sourceforge.net/docs/mibs/ucdDiskIOMIB.html#diskIOTable)</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#DEVNAME}: Disk read rate</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.read.rate[diskIOReads.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>!r/s</units>
                     <description>MIB: UCD-DISKIO-MIB&#13;
The number of read accesses from this device since boot.</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Disk {#DEVNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>{#DEVNAME}: Disk utilization</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.9.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.util[diskIOLA1.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-DISKIO-MIB&#13;
The 1 minute average load of disk (%)</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Disk {#DEVNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>{#DEVNAME}: Disk write rate</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.13.15.1.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.dev.write.rate[diskIOWrites.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>!w/s</units>
                     <description>MIB: UCD-DISKIO-MIB&#13;
The number of write accesses from this device since boot.</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Disk {#DEVNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>{#DEVNAME}: Disk read/write rates</name>
                     <graph_items>
                        <graph_item>
                           <color>1A7C11</color>
                           <item>
                              <host>Template Module Linux block devices SNMPv2</host>
                              <key>vfs.dev.read.rate[diskIOReads.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <drawtype>GRADIENT_LINE</drawtype>
                           <color>2774A4</color>
                           <item>
                              <host>Template Module Linux block devices SNMPv2</host>
                              <key>vfs.dev.write.rate[diskIOWrites.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
         </discovery_rules>
         <macros>
            <macro>
               <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
               <value>.+</value>
               <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
               <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+)</value>
               <description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description>
            </macro>
         </macros>
      </template>
      <template>
         <template>Template Module Linux CPU SNMPv2</template>
         <name>Template Module Linux CPU SNMPv2</name>
         <description>MIBs used:&#13;
HOST-RESOURCES-MIB&#13;
UCD-SNMP-MIB&#13;
&#13;
Template tooling version used: 0.32</description>
         <groups>
            <group>
               <name>Templates/Modules</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>CPU</name>
            </application>
         </applications>
         <items>
            <item>
               <name>Interrupts per second</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.11.59.0</snmp_oid>
               <key>system.cpu.intr[ssRawInterrupts.0]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Load average (1m avg)</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-1"]</snmp_oid>
               <key>system.cpu.load.avg1[laLoad.1]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Load average (15m avg)</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-15"]</snmp_oid>
               <key>system.cpu.load.avg15[laLoad.3]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Load average (5m avg)</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-5"]</snmp_oid>
               <key>system.cpu.load.avg5[laLoad.2]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <description>MIB: UCD-SNMP-MIB</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Number of CPUs</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.2.1.25.3.3.1.1]</snmp_oid>
               <key>system.cpu.num[snmp]</key>
               <history>7d</history>
               <description>MIB: HOST-RESOURCES-MIB&#13;
Count the number of CPU cores by counting number of cores discovered in hrProcessorTable using LLD</description>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>//count the number of cores
return JSON.parse(value).length;
</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Context switches per second</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.11.60.0</snmp_oid>
               <key>system.cpu.switches[ssRawContexts.0]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <applications>
                  <application>
                     <name>CPU</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>CHANGE_PER_SECOND</type>
                     <params/>
                  </step>
               </preprocessing>
            </item>
         </items>
         <discovery_rules>
            <discovery_rule>
               <name>CPU discovery</name>
               <type>DEPENDENT</type>
               <key>cpu.discovery[snmp]</key>
               <delay>0</delay>
               <description>This discovery will create set of per core CPU metrics from UCD-SNMP-MIB, using {#CPU.COUNT} in preprocessing. That's the only reason why LLD is used.</description>
               <item_prototypes>
                  <item_prototype>
                     <name>CPU guest nice time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.66.0</snmp_oid>
                     <key>system.cpu.guest_nice[ssCpuRawGuestNice.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
Time spent running a niced guest (virtual CPU for guest operating systems under the control of the Linux kernel)</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU guest time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.65.0</snmp_oid>
                     <key>system.cpu.guest[ssCpuRawGuest.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
Guest  time (time  spent  running  a  virtual  CPU  for  a  guest  operating  system)</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU idle time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.53.0</snmp_oid>
                     <key>system.cpu.idle[ssCpuRawIdle.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent doing nothing.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU interrupt time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.56.0</snmp_oid>
                     <key>system.cpu.interrupt[ssCpuRawInterrupt.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The amount of time the CPU has been servicing hardware interrupts.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU iowait time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.54.0</snmp_oid>
                     <key>system.cpu.iowait[ssCpuRawWait.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
Amount of time the CPU has been waiting for I/O to complete.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU nice time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.51.0</snmp_oid>
                     <key>system.cpu.nice[ssCpuRawNice.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent running users' processes that have been niced.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU softirq time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.61.0</snmp_oid>
                     <key>system.cpu.softirq[ssCpuRawSoftIRQ.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The amount of time the CPU has been servicing software interrupts.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU steal time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.64.0</snmp_oid>
                     <key>system.cpu.steal[ssCpuRawSteal.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The amount of CPU 'stolen' from this virtual machine by the hypervisor for other tasks (such as running another virtual machine).</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU system time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.52.0</snmp_oid>
                     <key>system.cpu.system[ssCpuRawSystem.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent running the kernel and its processes.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU user time</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.11.50.0</snmp_oid>
                     <key>system.cpu.user[ssCpuRawUser.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
The time the CPU has spent running users' processes that are not niced.</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//to get utilization in %, divide by N, where N is number of cores.
return value/{#CPU.COUNT}
</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>CPU utilization</name>
                     <type>DEPENDENT</type>
                     <key>system.cpu.util[snmp,{#SNMPINDEX}]</key>
                     <delay>0</delay>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>CPU utilization in %</description>
                     <applications>
                        <application>
                           <name>CPU</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>//Calculate utilization
return (100 - value)
</params>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>system.cpu.idle[ssCpuRawIdle.{#SNMPINDEX}]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min(5m)}&gt;{$CPU.UTIL.CRIT}</expression>
                           <name>High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)</name>
                           <opdata>Current utilization: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>CPU usage{#SINGLETON}</name>
                     <type>STACKED</type>
                     <ymin_type_1>FIXED</ymin_type_1>
                     <ymax_type_1>FIXED</ymax_type_1>
                     <graph_items>
                        <graph_item>
                           <color>1A7C11</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.system[ssCpuRawSystem.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>2774A4</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.user[ssCpuRawUser.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>F63100</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.nice[ssCpuRawNice.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>A54F10</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.iowait[ssCpuRawWait.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>FC6EA3</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.steal[ssCpuRawSteal.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>6C59DC</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.interrupt[ssCpuRawInterrupt.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>AC8C14</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.softirq[ssCpuRawSoftIRQ.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>7</sortorder>
                           <color>611F27</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.guest[ssCpuRawGuest.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>8</sortorder>
                           <color>F230E0</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.guest_nice[ssCpuRawGuestNice.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>CPU utilization{#SINGLETON}</name>
                     <ymin_type_1>FIXED</ymin_type_1>
                     <ymax_type_1>FIXED</ymax_type_1>
                     <graph_items>
                        <graph_item>
                           <drawtype>GRADIENT_LINE</drawtype>
                           <color>1A7C11</color>
                           <item>
                              <host>Template Module Linux CPU SNMPv2</host>
                              <key>system.cpu.util[snmp,{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
               <master_item>
                  <key>system.cpu.num[snmp]</key>
               </master_item>
               <preprocessing>
                  <step>
                     <type>JAVASCRIPT</type>
                     <params>//count the number of CPU cores
return JSON.stringify([{"{#CPU.COUNT}": value, "{#SNMPINDEX}": 0, "{#SINGLETON}":""}])
</params>
                  </step>
               </preprocessing>
            </discovery_rule>
         </discovery_rules>
         <macros>
            <macro>
               <macro>{$CPU.UTIL.CRIT}</macro>
               <value>90</value>
            </macro>
            <macro>
               <macro>{$LOAD_AVG_PER_CPU.MAX.WARN}</macro>
               <value>1.5</value>
               <description>Load per CPU considered sustainable. Tune if needed.</description>
            </macro>
         </macros>
      </template>
      <template>
         <template>Template Module Linux filesystems SNMPv2</template>
         <name>Template Module Linux filesystems SNMPv2</name>
         <description>MIBs used:&#13;
HOST-RESOURCES-MIB&#13;
UCD-SNMP-MIB&#13;
&#13;
Template tooling version used: 0.32</description>
         <groups>
            <group>
               <name>Templates/Modules</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>Storage</name>
            </application>
         </applications>
         <discovery_rules>
            <discovery_rule>
               <name>Mounted filesystem discovery</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>discovery[{#FSNAME},1.3.6.1.2.1.25.2.3.1.3,{#FSTYPE},1.3.6.1.2.1.25.2.3.1.2,{#ALLOC_UNITS},1.3.6.1.2.1.25.2.3.1.4]</snmp_oid>
               <key>vfs.fs.discovery[snmp]</key>
               <delay>1h</delay>
               <filter>
                  <evaltype>AND</evaltype>
                  <conditions>
                     <condition>
                        <macro>{#FSTYPE}</macro>
                        <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                        <formulaid>A</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSTYPE}</macro>
                        <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>B</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSNAME}</macro>
                        <value>{$VFS.FS.FSNAME.MATCHES}</value>
                        <formulaid>C</formulaid>
                     </condition>
                     <condition>
                        <macro>{#FSNAME}</macro>
                        <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                        <operator>NOT_MATCHES_REGEX</operator>
                        <formulaid>D</formulaid>
                     </condition>
                  </conditions>
               </filter>
               <description>HOST-RESOURCES-MIB::hrStorage discovery with storage filter</description>
               <item_prototypes>
                  <item_prototype>
                     <name>{#FSNAME}: Free inodes in %</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.4.1.2021.9.1.10["index","1.3.6.1.4.1.2021.9.1.2", "{#FSNAME}"]</snmp_oid>
                     <key>vfs.fs.inode.pfree[dskPercentNode.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <description>MIB: UCD-SNMP-MIB&#13;
If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>JAVASCRIPT</type>
                           <params>return (100-value);</params>
                        </step>
                     </preprocessing>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}</expression>
                           <name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}%)</name>
                           <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                           <priority>AVERAGE</priority>
                           <description>It may become impossible to write to disk if there are no index nodes left.&#13;
As symptoms, 'No space left on device' or 'Disk is full' errors may be seen even though free space is available.</description>
                        </trigger_prototype>
                        <trigger_prototype>
                           <expression>{min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.WARN:"{#FSNAME}"}</expression>
                           <name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.WARN:"{#FSNAME}"}%)</name>
                           <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                           <priority>WARNING</priority>
                           <description>It may become impossible to write to disk if there are no index nodes left.&#13;
As symptoms, 'No space left on device' or 'Disk is full' errors may be seen even though free space is available.</description>
                           <dependencies>
                              <dependency>
                                 <name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}%)</name>
                                 <expression>{Template Module Linux filesystems SNMPv2:vfs.fs.inode.pfree[dskPercentNode.{#SNMPINDEX}].min(5m)}&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}</expression>
                              </dependency>
                           </dependencies>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>{#FSNAME}: Space utilization</name>
                     <type>CALCULATED</type>
                     <key>vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <params>(last("vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]")/last("vfs.fs.total[hrStorageSize.{#SNMPINDEX}]"))*100</params>
                     <description>Space utilization in % for {#FSNAME}</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>{#FSNAME}: Total space</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.2.1.25.2.3.1.5.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.fs.total[hrStorageSize.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>B</units>
                     <description>MIB: HOST-RESOURCES-MIB&#13;
The size of the storage represented by this entry, in units of hrStorageAllocationUnits.&#13;
This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system.&#13;
For example, the amount of main storage allocated to a buffer pool might be modified or the amount of disk space allocated to virtual storage might be modified.</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>{#ALLOC_UNITS}</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
                  <item_prototype>
                     <name>{#FSNAME}: Used space</name>
                     <type>SNMPV2</type>
                     <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
                     <snmp_oid>1.3.6.1.2.1.25.2.3.1.6.{#SNMPINDEX}</snmp_oid>
                     <key>vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]</key>
                     <history>7d</history>
                     <units>B</units>
                     <description>MIB: HOST-RESOURCES-MIB&#13;
The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.</description>
                     <application_prototypes>
                        <application_prototype>
                           <name>Filesystem {#FSNAME}</name>
                        </application_prototype>
                     </application_prototypes>
                     <preprocessing>
                        <step>
                           <type>MULTIPLIER</type>
                           <params>{#ALLOC_UNITS}</params>
                        </step>
                     </preprocessing>
                  </item_prototype>
               </item_prototypes>
               <trigger_prototypes>
                  <trigger_prototype>
                     <expression>{Template Module Linux filesystems SNMPv2:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].last()}&gt;{$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"} and&#13;
(({Template Module Linux filesystems SNMPv2:vfs.fs.total[hrStorageSize.{#SNMPINDEX}].last()}-{Template Module Linux filesystems SNMPv2:vfs.fs.used[hrStorageUsed.{#SNMPINDEX}].last()})&lt;5G or {Template Module Linux filesystems SNMPv2:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].timeleft(1h,,100)}&lt;1d)</expression>
                     <name>{#FSNAME}: Disk space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}%)</name>
                     <opdata>Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})</opdata>
                     <priority>AVERAGE</priority>
                     <description>Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}.&#13;
 Second condition should be one of the following:&#13;
 - The disk free space is less than 5G.&#13;
 - The disk will be full in less than 24 hours.</description>
                     <manual_close>YES</manual_close>
                  </trigger_prototype>
                  <trigger_prototype>
                     <expression>{Template Module Linux filesystems SNMPv2:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].last()}&gt;{$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"} and&#13;
(({Template Module Linux filesystems SNMPv2:vfs.fs.total[hrStorageSize.{#SNMPINDEX}].last()}-{Template Module Linux filesystems SNMPv2:vfs.fs.used[hrStorageUsed.{#SNMPINDEX}].last()})&lt;10G or {Template Module Linux filesystems SNMPv2:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].timeleft(1h,,100)}&lt;1d)</expression>
                     <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"}%)</name>
                     <opdata>Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})</opdata>
                     <priority>WARNING</priority>
                     <description>Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}.&#13;
 Second condition should be one of the following:&#13;
 - The disk free space is less than 10G.&#13;
 - The disk will be full in less than 24 hours.</description>
                     <manual_close>YES</manual_close>
                     <dependencies>
                        <dependency>
                           <name>{#FSNAME}: Disk space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}%)</name>
                           <expression>{Template Module Linux filesystems SNMPv2:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].last()}&gt;{$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"} and&#13;
(({Template Module Linux filesystems SNMPv2:vfs.fs.total[hrStorageSize.{#SNMPINDEX}].last()}-{Template Module Linux filesystems SNMPv2:vfs.fs.used[hrStorageUsed.{#SNMPINDEX}].last()})&lt;5G or {Template Module Linux filesystems SNMPv2:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].timeleft(1h,,100)}&lt;1d)</expression>
                        </dependency>
                     </dependencies>
                  </trigger_prototype>
               </trigger_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>{#FSNAME}: Disk space usage</name>
                     <width>600</width>
                     <height>340</height>
                     <type>PIE</type>
                     <show_3d>YES</show_3d>
                     <graph_items>
                        <graph_item>
                           <color>969696</color>
                           <calc_fnc>LAST</calc_fnc>
                           <type>GRAPH_SUM</type>
                           <item>
                              <host>Template Module Linux filesystems SNMPv2</host>
                              <key>vfs.fs.total[hrStorageSize.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <calc_fnc>LAST</calc_fnc>
                           <item>
                              <host>Template Module Linux filesystems SNMPv2</host>
                              <key>vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
         </discovery_rules>
         <macros>
            <macro>
               <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
               <value>.+</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
               <value>^(/dev|/sys|/run|/proc|.+/shm$)</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
               <value>.*(\.4|\.9|hrStorageFixedDisk|hrStorageFlashMemory)$</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
               <value>^\s$</value>
               <description>This macro is used in filesystems discovery. Can be overridden on the host or linked template level</description>
            </macro>
            <macro>
               <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
               <value>10</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
               <value>20</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
               <value>90</value>
            </macro>
            <macro>
               <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
               <value>80</value>
            </macro>
         </macros>
      </template>
      <template>
         <template>Template Module Linux memory SNMPv2</template>
         <name>Template Module Linux memory SNMPv2</name>
         <description>MIBs used:&#13;
UCD-SNMP-MIB&#13;
&#13;
Known Issues:&#13;
&#13;
  Description: Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.&#13;
&#13;
Template tooling version used: 0.32</description>
         <groups>
            <group>
               <name>Templates/Modules</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>Memory</name>
            </application>
         </applications>
         <items>
            <item>
               <name>Free swap space</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.4.4.0</snmp_oid>
               <key>system.swap.free[memAvailSwap.0]</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The amount of swap space currently unused or available.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Free swap space in %</name>
               <type>CALCULATED</type>
               <key>system.swap.pfree[snmp]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <params>last("system.swap.free[memAvailSwap.0]")/last("system.swap.total[memTotalSwap.0]")*100</params>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Total swap space</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.4.3.0</snmp_oid>
               <key>system.swap.total[memTotalSwap.0]</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
The total amount of swap space configured for this host.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Available memory</name>
               <type>CALCULATED</type>
               <key>vm.memory.available[snmp]</key>
               <history>7d</history>
               <units>B</units>
               <params>last("vm.memory.free[memAvailReal.0]")+last("vm.memory.buffers[memBuffer.0]")+last("vm.memory.cached[memCached.0]")</params>
               <description>Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Memory (buffers)</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.4.14.0</snmp_oid>
               <key>vm.memory.buffers[memBuffer.0]</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
Memory used by kernel buffers (Buffers in /proc/meminfo)</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Memory (cached)</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.4.15.0</snmp_oid>
               <key>vm.memory.cached[memCached.0]</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Free memory</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.4.6.0</snmp_oid>
               <key>vm.memory.free[memAvailReal.0]</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Total memory</name>
               <type>SNMPV2</type>
               <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
               <snmp_oid>1.3.6.1.4.1.2021.4.5.0</snmp_oid>
               <key>vm.memory.total[memTotalReal.0]</key>
               <history>7d</history>
               <units>B</units>
               <description>MIB: UCD-SNMP-MIB&#13;
Total memory in Bytes</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <preprocessing>
                  <step>
                     <type>MULTIPLIER</type>
                     <params>1024</params>
                  </step>
               </preprocessing>
            </item>
            <item>
               <name>Memory utilization</name>
               <type>CALCULATED</type>
               <key>vm.memory.util[snmp]</key>
               <history>7d</history>
               <value_type>FLOAT</value_type>
               <units>%</units>
               <params>(last("vm.memory.total[memTotalReal.0]")-(last("vm.memory.free[memAvailReal.0]")+last("vm.memory.buffers[memBuffer.0]")+last("vm.memory.cached[memCached.0]")))/last("vm.memory.total[memTotalReal.0]")*100</params>
               <description>Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.</description>
               <applications>
                  <application>
                     <name>Memory</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{min(5m)}&gt;{$MEMORY.UTIL.MAX}</expression>
                     <name>High memory utilization ( &gt;{$MEMORY.UTIL.MAX}% for 5m)</name>
                     <priority>AVERAGE</priority>
                     <dependencies>
                        <dependency>
                           <name>Lack of available memory ( &lt; {$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</name>
                           <expression>{Template Module Linux memory SNMPv2:vm.memory.available[snmp].min(5m)}&lt;{$MEMORY.AVAILABLE.MIN} and {Template Module Linux memory SNMPv2:vm.memory.total[memTotalReal.0].last()}&gt;0</expression>
                        </dependency>
                     </dependencies>
                  </trigger>
               </triggers>
            </item>
         </items>
         <macros>
            <macro>
               <macro>{$MEMORY.AVAILABLE.MIN}</macro>
               <value>20M</value>
            </macro>
            <macro>
               <macro>{$MEMORY.UTIL.MAX}</macro>
               <value>90</value>
            </macro>
            <macro>
               <macro>{$SWAP.PFREE.MIN.WARN}</macro>
               <value>50</value>
            </macro>
         </macros>
      </template>
      <template>
         <template>Template OS Linux SNMPv2</template>
         <name>Template OS Linux SNMPv2</name>
         <description>Template OS Linux&#13;
&#13;
You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux&#13;
&#13;
Template tooling version used: 0.32</description>
         <templates>
            <template>
               <name>Template Module EtherLike-MIB SNMPv2</name>
            </template>
            <template>
               <name>Template Module Generic SNMPv2</name>
            </template>
            <template>
               <name>Template Module Interfaces SNMPv2</name>
            </template>
            <template>
               <name>Template Module Linux block devices SNMPv2</name>
            </template>
            <template>
               <name>Template Module Linux CPU SNMPv2</name>
            </template>
            <template>
               <name>Template Module Linux filesystems SNMPv2</name>
            </template>
            <template>
               <name>Template Module Linux memory SNMPv2</name>
            </template>
         </templates>
         <groups>
            <group>
               <name>Templates/Operating systems</name>
            </group>
         </groups>
         <screens>
            <screen>
               <name>System performance</name>
               <hsize>2</hsize>
               <vsize>6</vsize>
               <screen_items>
                  <screen_item>
                     <resourcetype>0</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>System load</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>0</x>
                     <y>0</y>
                     <colspan>1</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>20</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>CPU usage{#SINGLETON}</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>1</x>
                     <y>0</y>
                     <colspan>1</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>0</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>Memory usage</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>0</x>
                     <y>1</y>
                     <colspan>1</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>0</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>Swap usage</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>1</x>
                     <y>1</y>
                     <colspan>1</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>20</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>{#FSNAME}: Disk space usage</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>0</x>
                     <y>2</y>
                     <colspan>2</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>20</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>{#DEVNAME}: Disk read/write rates</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>0</x>
                     <y>3</y>
                     <colspan>2</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>19</resourcetype>
                     <style>0</style>
                     <resource>
                        <key>vfs.dev.util[diskIOLA1.{#SNMPINDEX}]</key>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>0</x>
                     <y>4</y>
                     <colspan>2</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
                  <screen_item>
                     <resourcetype>20</resourcetype>
                     <style>0</style>
                     <resource>
                        <name>Interface {#IFNAME}({#IFALIAS}): Network traffic</name>
                        <host>Template OS Linux SNMPv2</host>
                     </resource>
                     <width>500</width>
                     <height>100</height>
                     <x>0</x>
                     <y>5</y>
                     <colspan>2</colspan>
                     <rowspan>1</rowspan>
                     <elements>25</elements>
                     <valign>0</valign>
                     <halign>0</halign>
                     <dynamic>0</dynamic>
                     <sort_triggers>0</sort_triggers>
                     <url/>
                     <application/>
                     <max_columns>3</max_columns>
                  </screen_item>
               </screen_items>
            </screen>
         </screens>
      </template>
   </templates>
   <triggers>
      <trigger>
         <expression>{Template Module Linux memory SNMPv2:system.swap.pfree[snmp].min(5m)}&lt;{$SWAP.PFREE.MIN.WARN} and {Template Module Linux memory SNMPv2:system.swap.total[memTotalSwap.0].last()}&gt;0</expression>
         <name>High swap space usage ( less than {$SWAP.PFREE.MIN.WARN}% free)</name>
         <opdata>Free: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
         <priority>WARNING</priority>
         <description>This trigger is ignored, if there is no swap configured</description>
         <dependencies>
            <dependency>
               <name>High memory utilization ( &gt;{$MEMORY.UTIL.MAX}% for 5m)</name>
               <expression>{Template Module Linux memory SNMPv2:vm.memory.util[snmp].min(5m)}&gt;{$MEMORY.UTIL.MAX}</expression>
            </dependency>
            <dependency>
               <name>Lack of available memory ( &lt; {$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</name>
               <expression>{Template Module Linux memory SNMPv2:vm.memory.available[snmp].min(5m)}&lt;{$MEMORY.AVAILABLE.MIN} and {Template Module Linux memory SNMPv2:vm.memory.total[memTotalReal.0].last()}&gt;0</expression>
            </dependency>
         </dependencies>
      </trigger>
      <trigger>
         <expression>{Template Module Linux memory SNMPv2:vm.memory.available[snmp].min(5m)}&lt;{$MEMORY.AVAILABLE.MIN} and {Template Module Linux memory SNMPv2:vm.memory.total[memTotalReal.0].last()}&gt;0</expression>
         <name>Lack of available memory ( &lt; {$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</name>
         <opdata>Available: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
         <priority>AVERAGE</priority>
      </trigger>
      <trigger>
         <expression>{Template Module Linux CPU SNMPv2:system.cpu.load.avg1[laLoad.1].min(5m)}/{Template Module Linux CPU SNMPv2:system.cpu.num[snmp].last()}&gt;{$LOAD_AVG_PER_CPU.MAX.WARN}&#13;
and {Template Module Linux CPU SNMPv2:system.cpu.load.avg5[laLoad.2].last()}&gt;0&#13;
and {Template Module Linux CPU SNMPv2:system.cpu.load.avg15[laLoad.3].last()}&gt;0</expression>
         <name>Load average is too high (per CPU load over {$LOAD_AVG_PER_CPU.MAX.WARN} for 5m)</name>
         <opdata>Load averages(1m 5m 15m): ({ITEM.LASTVALUE1} {ITEM.LASTVALUE3} {ITEM.LASTVALUE4}), # of CPUs: {ITEM.LASTVALUE2}</opdata>
         <priority>AVERAGE</priority>
         <description>Per CPU load average is too high. Your system may be slow to respond.</description>
      </trigger>
   </triggers>
   <graphs>
      <graph>
         <name>CPU jumps</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template Module Linux CPU SNMPv2</host>
                  <key>system.cpu.switches[ssRawContexts.0]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template Module Linux CPU SNMPv2</host>
                  <key>system.cpu.intr[ssRawInterrupts.0]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>Memory usage</name>
         <ymin_type_1>FIXED</ymin_type_1>
         <graph_items>
            <graph_item>
               <drawtype>BOLD_LINE</drawtype>
               <color>1A7C11</color>
               <item>
                  <host>Template Module Linux memory SNMPv2</host>
                  <key>vm.memory.total[memTotalReal.0]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <drawtype>GRADIENT_LINE</drawtype>
               <color>2774A4</color>
               <item>
                  <host>Template Module Linux memory SNMPv2</host>
                  <key>vm.memory.available[snmp]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>Memory utilization</name>
         <ymin_type_1>FIXED</ymin_type_1>
         <ymax_type_1>FIXED</ymax_type_1>
         <graph_items>
            <graph_item>
               <drawtype>GRADIENT_LINE</drawtype>
               <color>1A7C11</color>
               <item>
                  <host>Template Module Linux memory SNMPv2</host>
                  <key>vm.memory.util[snmp]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>Swap usage</name>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template Module Linux memory SNMPv2</host>
                  <key>system.swap.free[memAvailSwap.0]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template Module Linux memory SNMPv2</host>
                  <key>system.swap.total[memTotalSwap.0]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
      <graph>
         <name>System load</name>
         <ymin_type_1>FIXED</ymin_type_1>
         <graph_items>
            <graph_item>
               <color>1A7C11</color>
               <item>
                  <host>Template Module Linux CPU SNMPv2</host>
                  <key>system.cpu.load.avg1[laLoad.1]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>1</sortorder>
               <color>2774A4</color>
               <item>
                  <host>Template Module Linux CPU SNMPv2</host>
                  <key>system.cpu.load.avg5[laLoad.2]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>2</sortorder>
               <color>F63100</color>
               <item>
                  <host>Template Module Linux CPU SNMPv2</host>
                  <key>system.cpu.load.avg15[laLoad.3]</key>
               </item>
            </graph_item>
            <graph_item>
               <sortorder>3</sortorder>
               <color>A54F10</color>
               <yaxisside>RIGHT</yaxisside>
               <item>
                  <host>Template Module Linux CPU SNMPv2</host>
                  <key>system.cpu.num[snmp]</key>
               </item>
            </graph_item>
         </graph_items>
      </graph>
   </graphs>
</zabbix_export>
